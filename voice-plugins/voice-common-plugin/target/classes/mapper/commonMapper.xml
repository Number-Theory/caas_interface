<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 公共的业务数据库操作语句 -->
<mapper namespace="common">
	<!-- 获取账户信息 -->
	<select id="getUser" resultType="map">
		select * from tb_caas_user t where t.userId=#{userId} limit 1
	</select>
	
	<!-- 获取应用信息 -->
	<select id="getApplication" resultType="map">
		select * from tb_caas_application t where t.userId=#{userId} and t.productType=#{productName}
	</select>
	
	<!-- 插入扣费记录 -->
	<insert id="insertDeduction">
		INSERT INTO `tb_caas_deduction` (`userId`, `productType`, `deductionType`, `deductionCode`, `payMoney`, `createTime`, `createUser`, `status`)
		VALUES  (#{userId}, #{productType}, #{deductionType}, #{deductionCode}, #{deductionMoney}, now(), #{userId}, '0');
	</insert>
	
	<select id="getBalance" resultType="map">
		select t.balance, t.creditType, t.creditMoney from tb_caas_balance t where t.userId = #{userId} limit 1;
	</select>
	
	<update id="updateBalance">
		update tb_caas_balance set balance=balance - #{payMoney},updateTime=now() where userId=#{userId};
	</update>
	
	<update id="updateDeductionStatus">
		update tb_caas_cdr set deductionStatus='0' where userId=#{userId} and callId=#{callId};
	</update>
	
	<!-- 根据号码获取费率 -->
	<select id="getNumberRate">
		select * from tb_caas_fee t where t.id in (select n.rateId from tb_caas_phonenumber n where n.phoneNumber=#{phoneNumber} limit 1)
	</select>
	
	<select id="getNumInfomation" resultType="map">
		select * from
		tb_caas_num_infomation t where t.`mobile`=#{mobile} limit 1
	</select>
	
	<update id="updateRateDeductionUnit">
		update tb_caas_fee t set t.gratisUnit = t.gratisUnit-#{deductionUtit} where t.id=#{rateId};
	</update>
	
	<select id="getNumByUserIdAndProductType" resultType="map">
		select * from tb_caas_phonenumber t where t.userId=#{userId} and t.productType=#{productType} and t.phoneNumber=#{phoneNumber} and t.status='0'
	</select>
	
	<insert id="insertBill">
		INSERT INTO `tb_caas_cdr` (`userId`, `productType`, `callId`, `caller`, `callerCityCode`, `callerProvider`, 
		`callerDisplay`, `called`, `calledCityCode`, `calledProvider`, `calledDisplay`, `realityNumber`, `recordType`, 
		`callStatus`, `beginTime`, `endTime`, `callType`, `callTime`, `rateId`, `billingType`, `billingUnit`, 
		`callPrice`, `deductionUnit`, `cdrType`, `recordPrice`, `recordUrl`, `callStatusB`, `beginTimeB`, `endTimeB`, 
		`callTypeB`, `callTimeB`, `callPriceB`, `deductionUnitB`, `cdrTypeB`, `callPayMoney`, `recordPayMoney`, `payMoney`, 
		`createTime`, `deductionStatus`, `message`, `userData`, `remark`) VALUES 
		(#{userId}, #{productType}, #{callId}, #{caller}, #{callerCityCode}, #{callerProvider}, #{callerDisplay}, #{called}, #{calledCityCode}, #{calledProvider},
		 #{calledDisplay}, #{realityNumber}, #{recordType}, #{callStatus}, #{beginTime}, #{endTime}, #{callType}, #{callTime}, #{rateId}, #{billingType}, #{billingUnit},
		  #{callPrice}, #{deductionUnit}, #{cdrType}, #{recordPrice}, #{recordUrl}, #{callStatusB}, #{beginTimeB}, #{endTimeB}, #{callTypeB}, #{callTimeB}, #{callPriceB},
		   #{deductionUnitB}, #{cdrTypeB}, #{callPayMoney}, #{recordPayMoney}, #{payMoney}, now(), #{deductionStatus}, #{message}, #{userData}, #{remark});	
	</insert>
</mapper>